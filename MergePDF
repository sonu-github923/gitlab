package codingPrac;


import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Random;

import org.apache.pdfbox.io.MemoryUsageSetting;
import org.apache.pdfbox.multipdf.PDFMergerUtility;
import org.apache.pdfbox.text.PDFTextStripper;


public class PDFMerger {

	public static final String MERGED_PDF = "E:\\\\c.pdf";
	  public static void main(String[] args) {
	    // Source PDFs as a list
	    List<String> fileList = Arrays.asList("E:\\\\a.pdf", "E:\\\\b.pdf");
	    List<Path> paths = new ArrayList<>();
	    Random rand = new Random();
	    
	    
	    fileList.forEach(val-> {
	    	int i = rand.nextInt();
	    	String s = "a"+String.valueOf(i);
	    	try {
	    		byte[] ab = Files.readAllBytes(Paths.get(val));
				Path tempfile = Files.createTempFile(s,"."+"pdf");
				Files.write(tempfile,ab);
				File fl = tempfile.toFile();
				paths.add(tempfile);
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
	    });
	    
	    
	    PDFMergerUtility pdfMerger = new PDFMergerUtility();
	    pdfMerger.setDestinationFileName(MERGED_PDF);
	    try {
	      // iterate list and add files to PDFMergerUtility
	      for(Path filePath : paths) {
	    	  String sy = filePath.toString();
	        pdfMerger.addSource(sy);
	      }
	      // Merge documents
	      pdfMerger.mergeDocuments(MemoryUsageSetting.setupMainMemoryOnly());
	    }catch (IOException e) {
	      // TODO Auto-generated catch block
	      e.printStackTrace();
	    }		
	  }
}
